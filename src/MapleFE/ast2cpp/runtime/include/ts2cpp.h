/*
 * Copyright (C) [2021] Futurewei Technologies, Inc. All rights reverved.
 *
 * OpenArkFE is licensed under the Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *
 *  http://license.coscl.org.cn/MulanPSL2
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

#ifndef __TS2CPP_RT_HEADER__
#define __TS2CPP_RT_HEADER__

#include <vector>
#include <string>
#include <map>

namespace t2crt {

class BaseObj;

// JS types for props (generated by t2cpp compiler or created at runtime).
typedef enum JS_Type : uint8_t {
  CG_Undef,     // "undefined"
  CG_Null,      // "object"
  CG_Bool,      // "boolean"
  CG_Long,      // "number"
  CG_Double,    // "number"
  CG_BigInt,    // "bigint"
  CG_String,    // "string"
  CG_Symbol,    // "symbol"
  CG_Function,  // "function"
  CG_Object,    // "object"
  CG_LAST,
  RT_Undef = 16,
  RT_Null,
  RT_Bool,
  RT_Long,
  RT_Double,
  RT_BigInt,
  RT_String,
  RT_Symbol,
  RT_Function,
  RT_Object,
  RT_LAST
} JS_Type;


typedef union JS_Val {
  void*    field;      // used by compiler genareted fields only
  bool     val_bool;
  long     val_long;
  double   val_double;
  long     val_bigint;
  char*    val_string; // JavaScript string primitive (not String object)
  BaseObj* val_obj;    // for function, object (incl. String objects)
} JS_Val;

typedef struct JS_Prop {
  JS_Val  val;
  JS_Type type;

  // Props directly generated by t2cpp
  JS_Prop(JS_Type jstype, void* field) {
    type = jstype;
    val.field = field;
  }

  // Props created at runtime
  JS_Prop(JS_Type jstype, JS_Val jsval) {
    type = jstype;
    val  = jsval;
  }

} JS_Prop;

inline bool IsCompilerGenProp(JS_Prop* prop) {
  return  (!prop->type & 0x10);
}

typedef std::map<std::string, JS_Prop*> JS_PropList;

class BaseObj {
  public:
    JS_PropList propList;
    // JS_Prop* prototype;
};

} // namespace t2crt
#endif
