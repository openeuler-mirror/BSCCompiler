/*
* Copyright (C) [2020] Futurewei Technologies, Inc. All rights reverved.
*
* OpenArkFE is licensed under the Mulan PSL v2.
* You can use this software according to the terms and conditions of the Mulan PSL v2.
* You may obtain a copy of Mulan PSL v2 at:
*
*  http://license.coscl.org.cn/MulanPSL2
*
* THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
* FIT FOR A PARTICULAR PURPOSE.
* See the Mulan PSL v2 for more details.
*/

// This file defines the AST Node Kind list. It is shared nodes among different languages.
// Each language can have its own unique set of noke kind list, and be included too.

NODEKIND(Package)
NODEKIND(Import)

NODEKIND(Identifier)
NODEKIND(Field)
NODEKIND(Dimension)
NODEKIND(Attr)
NODEKIND(PrimType)
NODEKIND(UserType)

NODEKIND(Cast)
NODEKIND(Parenthesis)

// VarList is for identifier list only.
// ExprList is for all kinds of node.
NODEKIND(VarList)
NODEKIND(ExprList)

NODEKIND(Literal)
NODEKIND(UnaOperator)
NODEKIND(BinOperator)
NODEKIND(TerOperator)
NODEKIND(Lambda)

NODEKIND(Block)
NODEKIND(Function)
NODEKIND(Class)
NODEKIND(Interface)

// Annotation, Pragma in c/c++, has no effects for execution, but has meanings
// for compiler or runtime.
//
// AnnotationType : The definition of a type of annotation
// Annotation     : The usage of an annotation type

NODEKIND(AnnotationType)
NODEKIND(Annotation)

NODEKIND(Exception)

// These are statement nodes, or control flow related nodes. They are
// common in most languages.
NODEKIND(Return)
NODEKIND(CondBranch)
NODEKIND(Break)
NODEKIND(ForLoop)
NODEKIND(WhileLoop)
NODEKIND(DoLoop)
NODEKIND(New)
NODEKIND(Delete)
NODEKIND(Call)

NODEKIND(SwitchLabel)
NODEKIND(SwitchCase)
NODEKIND(Switch)

NODEKIND(Pass)
