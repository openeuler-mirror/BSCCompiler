Matched 5 tokens.
Matched 12 tokens.
Matched 19 tokens.
Matched 26 tokens.
Matched 33 tokens.
Matched 40 tokens.
Matched 49 tokens.
Matched 58 tokens.
Matched 65 tokens.
Matched 72 tokens.
Matched 730 tokens.
============= Module ===========
== Sub Tree ==
package java.lang
== Sub Tree ==
import java.io.Serializable
== Sub Tree ==
import java.io.IOException
== Sub Tree ==
import java.io.InvalidObjectException
== Sub Tree ==
import java.io.ObjectInputStream
== Sub Tree ==
import java.io.ObjectStreamException
== Sub Tree ==
import java.lang.reflect.InvocationTargetException
== Sub Tree ==
import java.lang.reflect.Method
== Sub Tree ==
import libcore.util.BasicLruCache
== Sub Tree ==
import libcore.util.EmptyArray
== Sub Tree ==
class  Enum
  Fields: 
    name    ordinal    sharedConstantsCache=new BasicLruCache(64)
  Instance Initializer: 
  Constructors: 
    constructor  Enum(name,ordinal)  throws: 
      this.name Assign name
      this.ordinal Assign ordinal
  Methods: 
    func  name()  throws: 
      return name
    func  ordinal()  throws: 
      return ordinal
    func  toString()  throws: 
      return name
    func  equals(other)  throws: 
      return this EQ other
    func  hashCode()  throws: 
      return super.hashCode()
    func  clone()  throws:     CloneNotSupportedException
      new CloneNotSupportedException()
    func  compareTo(o)  throws: 
      Decl: other=(Enum)o
      Decl: self=this
      cond-branch cond:self.getClass() NE other.getClass() Land self.getDeclaringClass() NE other.getDeclaringClass()
      true branch :
        new ClassCastException()
      false branch :

      return self.ordinal Sub other.ordinal
    func  getDeclaringClass()  throws: 
      Decl: clazz=getClass()
      Decl: zuper=clazz.getSuperclass()
      return 
    func  valueOf(enumType,name)  throws: 
      cond-branch cond:enumType EQ null
      true branch :
        new NullPointerException("enumType == null")
      false branch :

      cond-branch cond:name EQ null
      true branch :
        new NullPointerException("name == null")
      false branch :

      Decl: values=getSharedConstants(enumType)
      cond-branch cond:values EQ null
      true branch :
        new IllegalArgumentException(enumType.toString() Add " is not an enum type.")
      false branch :

      for ( )
        Decl: value=
        cond-branch cond:name.equals(value.name())
        true branch :
          return value
        false branch :


      new IllegalArgumentException("No enum constant " Add enumType.getCanonicalName() Add "." Add name)
    func  getSharedConstants(enumType)  throws: 
      return (T[])sharedConstantsCache.get(enumType)
    func  finalize()  throws: 
    func  readObject(in)  throws:     IOException    ClassNotFoundException
      new InvalidObjectException("can't deserialize enum")
    func  readObjectNoData()  throws:     ObjectStreamException
      new InvalidObjectException("can't deserialize enum")
  LocalClasses: 
  LocalInterfaces: 

Field Decl Duplication! Identifier:name is duplicated with Function:name
Field Decl Duplication! Identifier:ordinal is duplicated with Function:ordinal
UserType:CloneNotSupportedException has no decl.
UserType:IllegalArgumentException has no decl.
UserType:InvalidObjectException has no decl.
UserType:InvalidObjectException has no decl.
