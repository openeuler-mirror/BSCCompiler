Matched 5 tokens.
Matched 12 tokens.
Matched 438 tokens.
============= Module ===========
== Sub Tree ==
package java.lang
== Sub Tree ==
import java.util.Objects
== Sub Tree ==
class  StackTraceElement
  Fields: 
    declaringClass    methodName    fileName    lineNumber    serialVersionUID=641129861
  Instance Initializer: 
  Constructors: 
    constructor  StackTraceElement(declaringClass,methodName,fileName,lineNumber)  throws: 
      this.declaringClass Assign Objects.requireNonNull(declaringClass,"Declaring class is null")
      this.methodName Assign Objects.requireNonNull(methodName,"Method name is null")
      this.fileName Assign fileName
      this.lineNumber Assign lineNumber
  Methods: 
    func  getFileName()  throws: 
      return fileName
    func  getLineNumber()  throws: 
      return lineNumber
    func  getClassName()  throws: 
      return declaringClass
    func  getMethodName()  throws: 
      return methodName
    func  isNativeMethod()  throws: 
      return lineNumber EQ Sub
  2
    func  toString()  throws: 
      Decl: result=new StringBuilder()
      result.append(getClassName()).append(".").append(methodName)
      cond-branch cond:isNativeMethod()
      true branch :
        result.append("(Native Method)")
      false branch :
        cond-branch cond:fileName NE null
        true branch :
          cond-branch cond:lineNumber GE 0
          true branch :
            result.append("(").append(fileName).append(":").append(lineNumber).append(")")
          false branch :
            result.append("(").append(fileName).append(")")

        false branch :
          cond-branch cond:lineNumber GE 0
          true branch :
            result.append("(Unknown Source:").append(lineNumber).append(")")
          false branch :
            result.append("(Unknown Source)")



      return result.toString()
    func  equals(obj)  throws: 
      cond-branch cond:obj EQ this
      true branch :
        return true
      false branch :

      cond-branch cond:(obj instanceof StackTraceElement)
      true branch :
        return false
      false branch :

      Decl: e=(StackTraceElement)obj
      return e.declaringClass.equals(declaringClass) Land e.lineNumber EQ lineNumber Land Objects.equals(methodName,e.methodName) Land Objects.equals(fileName,e.fileName)
    func  hashCode()  throws: 
      Decl: result=31 Mul declaringClass.hashCode() Add methodName.hashCode()
      result Assign 31 Mul result Add Objects.hashCode(fileName)
      result Assign 31 Mul result Add lineNumber
      return result
  LocalClasses: 
  LocalInterfaces: 

Identifier:result has no decl.
Identifier:result has no decl.
Identifier:result has no decl.
Identifier:result has no decl.
