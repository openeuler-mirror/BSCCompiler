Matched 1058 tokens.
============= Module ===========
== Sub Tree ==
class  ChatTest
  Fields: 
    listeningPort=0
  Instance Initializer: 
  Constructors: 
  Methods: 
    func  main()  throws:     Throwable
      testStartStop()
      testPortOpen()
      testAsksForName()
      testUseName()
      testConnectDisconnectConnect()
      testUsernameAndMessage()
      testDontReceiveMessageInNameState()
    func  startServer()  throws:     IOException
      var:server=new ChatServer<ChatServer>
      var:address=(InetSocketAddress)server.getSocketAddress()
      listeningPort Assign address.getPort()
      server.run()
      return server
    func  testStartStop()  throws:     Exception
      var:server=startServer()
      server.shutdown()
    func  testPortOpen()  throws:     Exception
      var:server=startServer()
      var:socket=new Socket<Socket>
      cond-branch cond:socket.isConnected()
      true branch :
        new RuntimeException<RuntimeException>
      false branch :


      server.shutdown()

    func  testAsksForName()  throws:     Exception
      var:server=startServer()
      var:socket=new Socket<Socket>


      server.shutdown()

    func  testUseName()  throws:     Throwable
      var:server=startServer()
      performTestUseName()

      server.shutdown()

    func  testConnectDisconnectConnect()  throws:     Exception
      var:server=startServer()
      performTestConnectDisconnectConnect()

      server.shutdown()

    func  testUsernameAndMessage()  throws:     Exception
      var:server=startServer()
      performTestUsernameAndMessage()

      server.shutdown()

    func  testDontReceiveMessageInNameState()  throws:     Exception
      var:server=startServer()
      performDontReceiveMessageInNameState()

      server.shutdown()

    func  assertEqual()  throws: 
      cond-branch cond:
      true branch :
        return 
      false branch :

      cond-branch cond:
      true branch :
        exception.add(new RuntimeException<RuntimeException>)
        return 
      false branch :

      cond-branch cond:expected.equals(value)
      true branch :
        exception.add(new RuntimeException<RuntimeException>)
        return 
      false branch :

    func  performDontReceiveMessageInNameState()  throws:     Exception
      var:barrier1=new CyclicBarrier<CyclicBarrier>
      var:barrier2=new CyclicBarrier<CyclicBarrier>
      var:barrier3=new CyclicBarrier<CyclicBarrier>
      var:exceptions=Collections.synchronizedList(new ArrayList<Exception>)
      var:chatConnection=new ChatConnection<ChatConnection>
      var:client2=new Thread<Thread>
      client2.start()
      chatConnection.run()
      cond-branch cond:exceptions.isEmpty()
      true branch :
        exceptions.get(0)
      false branch :

    func  waitForJoin()  throws:     IOException
      var:joined
      do         joined Assign readAvailableString(reader)
while ()
    func  performTestUsernameAndMessage()  throws:     Exception
      var:barrier1=new CyclicBarrier<CyclicBarrier>
      var:barrier2=new CyclicBarrier<CyclicBarrier>
      var:barrier3=new CyclicBarrier<CyclicBarrier>
      var:exceptions=Collections.synchronizedList(new ArrayList<Exception>)
      var:chatConnection=new ChatConnection<ChatConnection>
      var:client2=new Thread<Thread>
      client2.start()
      chatConnection.run()
      cond-branch cond:exceptions.isEmpty()
      true branch :
        exceptions.get(0)
      false branch :

  LocalClasses: 
  LocalInterfaces: 

