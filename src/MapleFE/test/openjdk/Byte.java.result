Matched 5 tokens.
Matched 909 tokens.
============= Module ===========
== Sub Tree ==
package java.lang
== Sub Tree ==
class  Byte
  Fields: 
    MIN_VALUE=Sub
  128    MAX_VALUE=127    TYPE=()    value    SIZE=8    BYTES=    serialVersionUID=Sub
  296684260    DIGITS=    UPPER_CASE_DIGITS=
  Instance Initializer: 
  Constructors: 
    constructor  Byte()  throws: 
      this.value Assign value
    constructor  Byte()  throws: 
      this.value Assign parseByte(s,10)
  Methods: 
    func  toString(b)  throws: 
      return Integer.toString((int)b,10)
    func  valueOf(b)  throws: 
      var:offset=128
      return 
    func  parseByte(s,radix)  throws:     NumberFormatException
      var:i=Integer.parseInt(s,radix)
      cond-branch cond:i LT MIN_VALUE Lor i GT MAX_VALUE
      true branch :
        new NumberFormatException<NumberFormatException>
      false branch :

      return (byte)i
    func  parseByte(s)  throws:     NumberFormatException
      return parseByte(s,10)
    func  valueOf(s,radix)  throws:     NumberFormatException
      return valueOf(parseByte(s,radix))
    func  valueOf(s)  throws:     NumberFormatException
      return valueOf(s,10)
    func  decode(nm)  throws:     NumberFormatException
      var:i=Integer.decode(nm)
      cond-branch cond:i LT MIN_VALUE Lor i GT MAX_VALUE
      true branch :
        new NumberFormatException<NumberFormatException>
      false branch :

      return valueOf((byte)i)
    func  byteValue()  throws: 
      return value
    func  shortValue()  throws: 
      return (short)value
    func  intValue()  throws: 
      return (int)value
    func  longValue()  throws: 
      return (long)value
    func  floatValue()  throws: 
      return (float)value
    func  doubleValue()  throws: 
      return (double)value
    func  toString()  throws: 
      return Integer.toString((int)value)
    func  hashCode()  throws: 
      return Byte.hashCode(value)
    func  hashCode(value)  throws: 
      return (int)value
    func  equals(obj)  throws: 
      cond-branch cond:
      true branch :
        return value EQ ((Byte)obj)byteValue
      false branch :

      return false
    func  compareTo(anotherByte)  throws: 
      return compare(this.value,anotherByte.value)
    func  compare(x,y)  throws: 
      return x Sub y
    func  toUnsignedInt(x)  throws: 
      return ((int)x) Band 255
    func  toUnsignedLong(x)  throws: 
      return ((long)x) Band 4095
    func  toHexString(b,upperCase)  throws: 
      var:digits=
      var:buf=
       Assign 
       Assign 
      return new String<String>
  LocalClasses: 
    class  ByteCache
      Fields: 
        cache=[]
      Instance Initializer: 
        InstInit- 0
      Constructors: 
        constructor  ByteCache()  throws: 
      Methods: 
      LocalClasses: 
      LocalInterfaces: 
  LocalInterfaces: 

