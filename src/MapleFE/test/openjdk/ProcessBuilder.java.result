Matched 5 tokens.
Matched 12 tokens.
Matched 19 tokens.
Matched 26 tokens.
Matched 33 tokens.
Matched 40 tokens.
Matched 47 tokens.
Matched 54 tokens.
Matched 61 tokens.
Matched 1635 tokens.
============= Module ===========
== Sub Tree ==
package java.lang
== Sub Tree ==
import java.io.File
== Sub Tree ==
import java.io.IOException
== Sub Tree ==
import java.io.InputStream
== Sub Tree ==
import java.io.OutputStream
== Sub Tree ==
import java.util.Arrays
== Sub Tree ==
import java.util.ArrayList
== Sub Tree ==
import java.util.List
== Sub Tree ==
import java.util.Map
== Sub Tree ==
class  ProcessBuilder
  Fields: 
    command    directory    environment    redirectErrorStream    redirects
  Instance Initializer: 
  Constructors: 
    constructor  ProcessBuilder(command)  throws: 
      cond-branch cond:command EQ null
      true branch :
        new NullPointerException<NullPointerException>
      false branch :

      this.command Assign command
    constructor  ProcessBuilder(String,command)  throws: 
      this.command Assign new ArrayList
      String
      arg
      command
      this.command.add(arg)
  Methods: 
    func  command(command)  throws: 
      cond-branch cond:command EQ null
      true branch :
        new NullPointerException<NullPointerException>
      false branch :

      this.command Assign command
      return this
    func  command(String,command)  throws: 
      this.command Assign new ArrayList
      String
      arg
      command
      this.command.add(arg)
      return this
    func  command()  throws: 
      return command
    func  environment()  throws: 
      var:security=System.getSecurityManager()
      cond-branch cond:security NE null
      true branch :
        security.checkPermission(new RuntimePermission<RuntimePermission>)
      false branch :

      cond-branch cond:environment EQ null
      true branch :
        environment Assign ProcessEnvironment.environment()
      false branch :

      assert environment NE null : 
      return environment
    func  environment(envp)  throws: 
      assert environment EQ null : 
      cond-branch cond:envp NE null
      true branch :
        environment Assign ProcessEnvironment.emptyEnvironment(envp.length)

      false branch :

      return this
    func  directory()  throws: 
      return directory
    func  directory(directory)  throws: 
      this.directory Assign directory
      return this
    func  redirects()  throws: 
      cond-branch cond:redirects EQ null
      true branch :
        redirects Assign 
      false branch :

      return redirects
    func  redirectInput(source)  throws: 
      cond-branch cond:source.type() EQ Redirect.Type.WRITE Lor source.type() EQ Redirect.Type.APPEND
      true branch :
        new IllegalArgumentException<IllegalArgumentException>
      false branch :

       Assign source
      return this
    func  redirectOutput(destination)  throws: 
      cond-branch cond:destination.type() EQ Redirect.Type.READ
      true branch :
        new IllegalArgumentException<IllegalArgumentException>
      false branch :

       Assign destination
      return this
    func  redirectError(destination)  throws: 
      cond-branch cond:destination.type() EQ Redirect.Type.READ
      true branch :
        new IllegalArgumentException<IllegalArgumentException>
      false branch :

       Assign destination
      return this
    func  redirectInput(file)  throws: 
      return redirectInput(Redirect.from(file))
    func  redirectOutput(file)  throws: 
      return redirectOutput(Redirect.to(file))
    func  redirectError(file)  throws: 
      return redirectError(Redirect.to(file))
    func  redirectInput()  throws: 
      return 
    func  redirectOutput()  throws: 
      return 
    func  redirectError()  throws: 
      return 
    func  inheritIO()  throws: 
      Arrays.fill(redirects(),Redirect.INHERIT)
      return this
    func  redirectErrorStream()  throws: 
      return redirectErrorStream
    func  redirectErrorStream(redirectErrorStream)  throws: 
      this.redirectErrorStream Assign redirectErrorStream
      return this
    func  start()  throws:     IOException
      var:cmdarray=command.toArray(String,command.size())
      cmdarray Assign cmdarray.clone()

      var:prog=
      var:security=System.getSecurityManager()
      cond-branch cond:security NE null
      true branch :
        security.checkExec(prog)
      false branch :

      var:dir=
      for ( )
        cond-branch cond:.indexOf(0) GE 0
        true branch :
          new IOException<IOException>
        false branch :



  LocalClasses: 
    class  NullInputStream
      Fields: 
        INSTANCE=new NullInputStream<NullInputStream>
      Instance Initializer: 
      Constructors: 
        constructor  NullInputStream()  throws: 
      Methods: 
        func  read()  throws: 
          return Sub
  1
        func  available()  throws: 
          return 0
      LocalClasses: 
      LocalInterfaces: 
    class  NullOutputStream
      Fields: 
        INSTANCE=new NullOutputStream<NullOutputStream>
      Instance Initializer: 
      Constructors: 
        constructor  NullOutputStream()  throws: 
      Methods: 
        func  write(b)  throws:     IOException
          new IOException<IOException>
      LocalClasses: 
      LocalInterfaces: 
    class  Redirect
      Fields: 
        PIPE=new Redirect<Redirect>        INHERIT=new Redirect<Redirect>
      Instance Initializer: 
      Constructors: 
        constructor  Redirect()  throws: 
      Methods: 
        func  type()  throws: 
        func  file()  throws: 
          return null
        func  append()  throws: 
          new UnsupportedOperationException<UnsupportedOperationException>
        func  from(file)  throws: 
          cond-branch cond:file EQ null
          true branch :
            new NullPointerException<NullPointerException>
          false branch :

          return new Redirect<Redirect>
        func  to(file)  throws: 
          cond-branch cond:file EQ null
          true branch :
            new NullPointerException<NullPointerException>
          false branch :

          return new Redirect<Redirect>
        func  appendTo(file)  throws: 
          cond-branch cond:file EQ null
          true branch :
            new NullPointerException<NullPointerException>
          false branch :

          return new Redirect<Redirect>
        func  equals(obj)  throws: 
          cond-branch cond:obj EQ this
          true branch :
            return true
          false branch :

          cond-branch cond:()
          true branch :
            return false
          false branch :

          var:r=(Redirect)obj
          cond-branch cond:r.type() NE this.type()
          true branch :
            return false
          false branch :

          assert this.file() NE null : 
          return this.file().equals(r.file())
        func  hashCode()  throws: 
          var:file=file()
          cond-branch cond:file EQ null
          true branch :
            return super.hashCode()
          false branch :
            return file.hashCode()

      LocalClasses: 
        class[JavaEnum]  Type
          Fields: 
            PIPE
          Instance Initializer: 
          Constructors: 
          Methods: 
          LocalClasses: 
          LocalInterfaces: 
      LocalInterfaces: 
  LocalInterfaces: 

Field Decl Duplication! Identifier:command is duplicated with Function:command
Field Decl Duplication! Identifier:command is duplicated with Function:command
Field Decl Duplication! Identifier:command is duplicated with Function:command
Field Decl Duplication! Identifier:directory is duplicated with Function:directory
Field Decl Duplication! Identifier:directory is duplicated with Function:directory
Field Decl Duplication! Identifier:environment is duplicated with Function:environment
Field Decl Duplication! Identifier:environment is duplicated with Function:environment
Field Decl Duplication! Identifier:redirectErrorStream is duplicated with Function:redirectErrorStream
Field Decl Duplication! Identifier:redirectErrorStream is duplicated with Function:redirectErrorStream
Field Decl Duplication! Identifier:redirects is duplicated with Function:redirects
UserType:ArrayList has no decl.
Identifier:String has no decl.
Identifier:arg has no decl.
