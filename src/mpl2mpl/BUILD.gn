#
# Copyright (c) [2020] Huawei Technologies Co.,Ltd.All rights reserved.
#
# OpenArkCompiler is licensed under the Mulan PSL v1.
# You can use this software according to the terms and conditions of the Mulan PSL v1.
# You may obtain a copy of Mulan PSL v1 at:
#
#     http://license.coscl.org.cn/MulanPSL
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
# FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v1 for more details.
#
include_directories = [
  "${MAPLEALL_ROOT}/maple_ir/include",
  "${MAPLEALL_ROOT}/maple_me/include",
  "${MAPLEALL_ROOT}/maple_ipa/include",
  "${MAPLEALL_ROOT}/maple_phase/include",
  "${MAPLEALL_ROOT}/maple_util/include",
  "${MAPLEALL_ROOT}/maple_driver/include",
  "${MAPLEALL_ROOT}/mpl2mpl/include",
  "${MAPLEALL_ROOT}/mempool/include",
  "${MAPLEALL_ROOT}/huawei_secure_c/include",
]

src_libmpl2mpl = [
  "src/class_init.cpp",
  "src/gen_check_cast.cpp",
  "src/muid_replacement.cpp",
  "src/reflection_analysis.cpp",
  "src/vtable_analysis.cpp",
  "src/java_intrn_lowering.cpp",
  "src/java_eh_lower.cpp",
  "src/native_stub_func.cpp",
  "src/vtable_impl.cpp",
  "src/class_hierarchy.cpp",
  "src/constantfold.cpp",
  "src/coderelayout.cpp",
  "src/annotation_analysis.cpp",
]

configs = [ "${MAPLEALL_ROOT}:mapleallcompilecfg" ]

static_library("libmpl2mpl") {
  sources = src_libmpl2mpl
  include_dirs = include_directories
  output_dir = "${root_out_dir}/ar"
}
