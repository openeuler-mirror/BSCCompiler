/*
 * Copyright (c) [2020] Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * OpenArkCompiler is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *
 *     http://license.coscl.org.cn/MulanPSL2
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */
// JBC_OP(opcode, value, type, name, flags)
JBC_OP(Nop, 0x00, Default, "nop", (kOpFlagFallThru))
JBC_OP(AConstNull, 0x01, Const, "aconst_null", (kOpFlagFallThru))
JBC_OP(IConstM1, 0x02, Const, "iconst_m1", (kOpFlagFallThru))
JBC_OP(IConst0, 0x03, Const, "iconst_0", (kOpFlagFallThru))
JBC_OP(IConst1, 0x04, Const, "iconst_1", (kOpFlagFallThru))
JBC_OP(IConst2, 0x05, Const, "iconst_2", (kOpFlagFallThru))
JBC_OP(IConst3, 0x06, Const, "iconst_3", (kOpFlagFallThru))
JBC_OP(IConst4, 0x07, Const, "iconst_4", (kOpFlagFallThru))
JBC_OP(IConst5, 0x08, Const, "iconst_5", (kOpFlagFallThru))
JBC_OP(LConst0, 0x09, Const, "lconst_0", (kOpFlagFallThru))
JBC_OP(LConst1, 0x0A, Const, "lconst_1", (kOpFlagFallThru))
JBC_OP(FConst0, 0x0B, Const, "fconst_0", (kOpFlagFallThru))
JBC_OP(FConst1, 0x0C, Const, "fconst_1", (kOpFlagFallThru))
JBC_OP(FConst2, 0x0D, Const, "fconst_2", (kOpFlagFallThru))
JBC_OP(DConst0, 0x0E, Const, "dconst_0", (kOpFlagFallThru))
JBC_OP(DConst1, 0x0F, Const, "dconst_1", (kOpFlagFallThru))
JBC_OP(BiPush, 0x10, Const, "bipush", (kOpFlagFallThru))
JBC_OP(SiPush, 0x11, Const, "sipush", (kOpFlagFallThru))
JBC_OP(Ldc, 0x12, Const, "ldc", (kOpFlagFallThru))
JBC_OP(LdcW, 0x13, Const, "ldc_w", (kOpFlagFallThru))
JBC_OP(Ldc2W, 0x14, Const, "ldc2_w", (kOpFlagFallThru))
JBC_OP(ILoad, 0x15, Load, "iload", (kOpFlagFallThru))
JBC_OP(LLoad, 0x16, Load, "lload", (kOpFlagFallThru))
JBC_OP(FLoad, 0x17, Load, "fload", (kOpFlagFallThru))
JBC_OP(DLoad, 0x18, Load, "dload", (kOpFlagFallThru))
JBC_OP(ALoad, 0x19, Load, "aload", (kOpFlagFallThru))
JBC_OP(ILoad0, 0x1A, Load, "iload_0", (kOpFlagFallThru))
JBC_OP(ILoad1, 0x1B, Load, "iload_1", (kOpFlagFallThru))
JBC_OP(ILoad2, 0x1C, Load, "iload_2", (kOpFlagFallThru))
JBC_OP(ILoad3, 0x1D, Load, "iload_3", (kOpFlagFallThru))
JBC_OP(LLoad0, 0x1E, Load, "lload_0", (kOpFlagFallThru))
JBC_OP(LLoad1, 0x1F, Load, "lload_1", (kOpFlagFallThru))
JBC_OP(LLoad2, 0x20, Load, "lload_2", (kOpFlagFallThru))
JBC_OP(LLoad3, 0x21, Load, "lload_3", (kOpFlagFallThru))
JBC_OP(FLoad0, 0x22, Load, "fload_0", (kOpFlagFallThru))
JBC_OP(FLoad1, 0x23, Load, "fload_1", (kOpFlagFallThru))
JBC_OP(FLoad2, 0x24, Load, "fload_2", (kOpFlagFallThru))
JBC_OP(FLoad3, 0x25, Load, "fload_3", (kOpFlagFallThru))
JBC_OP(DLoad0, 0x26, Load, "dload_0", (kOpFlagFallThru))
JBC_OP(DLoad1, 0x27, Load, "dload_1", (kOpFlagFallThru))
JBC_OP(DLoad2, 0x28, Load, "dload_2", (kOpFlagFallThru))
JBC_OP(DLoad3, 0x29, Load, "dload_3", (kOpFlagFallThru))
JBC_OP(ALoad0, 0x2A, Load, "aload_0", (kOpFlagFallThru))
JBC_OP(ALoad1, 0x2B, Load, "aload_1", (kOpFlagFallThru))
JBC_OP(ALoad2, 0x2C, Load, "aload_2", (kOpFlagFallThru))
JBC_OP(ALoad3, 0x2D, Load, "aload_3", (kOpFlagFallThru))
JBC_OP(IALoad, 0x2E, ArrayLoad, "iaload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(LALoad, 0x2F, ArrayLoad, "laload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(FALoad, 0x30, ArrayLoad, "faload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(DALoad, 0x31, ArrayLoad, "daload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(AALoad, 0x32, ArrayLoad, "aaload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(BALoad, 0x33, ArrayLoad, "baload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(CALoad, 0x34, ArrayLoad, "caload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(SALoad, 0x35, ArrayLoad, "saload", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(IStore, 0x36, Store, "istore", (kOpFlagFallThru))
JBC_OP(LStore, 0x37, Store, "lstore", (kOpFlagFallThru))
JBC_OP(FStore, 0x38, Store, "fstore", (kOpFlagFallThru))
JBC_OP(DStore, 0x39, Store, "dstore", (kOpFlagFallThru))
JBC_OP(AStore, 0x3A, Store, "astore", (kOpFlagFallThru))
JBC_OP(IStore0, 0x3B, Store, "istore_0", (kOpFlagFallThru))
JBC_OP(IStore1, 0x3C, Store, "istore_1", (kOpFlagFallThru))
JBC_OP(IStore2, 0x3D, Store, "istore_2", (kOpFlagFallThru))
JBC_OP(IStore3, 0x3E, Store, "istore_3", (kOpFlagFallThru))
JBC_OP(LStore0, 0x3F, Store, "lstore_0", (kOpFlagFallThru))
JBC_OP(LStore1, 0x40, Store, "lstore_1", (kOpFlagFallThru))
JBC_OP(LStore2, 0x41, Store, "lstore_2", (kOpFlagFallThru))
JBC_OP(LStore3, 0x42, Store, "lstore_3", (kOpFlagFallThru))
JBC_OP(FStore0, 0x43, Store, "fstore_0", (kOpFlagFallThru))
JBC_OP(FStore1, 0x44, Store, "fstore_1", (kOpFlagFallThru))
JBC_OP(FStore2, 0x45, Store, "fstore_2", (kOpFlagFallThru))
JBC_OP(FStore3, 0x46, Store, "fstore_3", (kOpFlagFallThru))
JBC_OP(DStore0, 0x47, Store, "dstore_0", (kOpFlagFallThru))
JBC_OP(DStore1, 0x48, Store, "dstore_1", (kOpFlagFallThru))
JBC_OP(DStore2, 0x49, Store, "dstore_2", (kOpFlagFallThru))
JBC_OP(DStore3, 0x4A, Store, "dstore_3", (kOpFlagFallThru))
JBC_OP(AStore0, 0x4B, Store, "astore_0", (kOpFlagFallThru))
JBC_OP(AStore1, 0x4C, Store, "astore_1", (kOpFlagFallThru))
JBC_OP(AStore2, 0x4D, Store, "astore_2", (kOpFlagFallThru))
JBC_OP(AStore3, 0x4E, Store, "astore_3", (kOpFlagFallThru))
JBC_OP(IAStore, 0x4F, ArrayStore, "iastore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(LAStore, 0x50, ArrayStore, "lastore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(FAStore, 0x51, ArrayStore, "fastore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(DAStore, 0x52, ArrayStore, "dastore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(AAStore, 0x53, ArrayStore, "aastore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(BAStore, 0x54, ArrayStore, "bastore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(CAStore, 0x55, ArrayStore, "castore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(SAStore, 0x56, ArrayStore, "sastore", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(Pop, 0x57, Pop, "pop", (kOpFlagFallThru))
JBC_OP(Pop2, 0x58, Pop, "pop2", (kOpFlagFallThru))
JBC_OP(Dup, 0x59, Dup, "dup", (kOpFlagFallThru))
JBC_OP(DupX1, 0x5A, Dup, "dup_x1", (kOpFlagFallThru))
JBC_OP(DupX2, 0x5B, Dup, "dup_x2", (kOpFlagFallThru))
JBC_OP(Dup2, 0x5C, Dup, "dup2", (kOpFlagFallThru))
JBC_OP(Dup2X1, 0x5D, Dup, "dup2_x1", (kOpFlagFallThru))
JBC_OP(Dup2X2, 0x5E, Dup, "dup2_x2", (kOpFlagFallThru))
JBC_OP(Swap, 0x5F, Swap, "swap", (kOpFlagFallThru))
JBC_OP(IAdd, 0x60, MathBinop, "iadd", (kOpFlagFallThru))
JBC_OP(LAdd, 0x61, MathBinop, "ladd", (kOpFlagFallThru))
JBC_OP(FAdd, 0x62, MathBinop, "fadd", (kOpFlagFallThru))
JBC_OP(DAdd, 0x63, MathBinop, "dadd", (kOpFlagFallThru))
JBC_OP(ISub, 0x64, MathBinop, "isub", (kOpFlagFallThru))
JBC_OP(LSub, 0x65, MathBinop, "lsub", (kOpFlagFallThru))
JBC_OP(FSub, 0x66, MathBinop, "fsub", (kOpFlagFallThru))
JBC_OP(DSub, 0x67, MathBinop, "dsub", (kOpFlagFallThru))
JBC_OP(IMul, 0x68, MathBinop, "imul", (kOpFlagFallThru))
JBC_OP(LMul, 0x69, MathBinop, "lmul", (kOpFlagFallThru))
JBC_OP(FMul, 0x6A, MathBinop, "fmul", (kOpFlagFallThru))
JBC_OP(DMul, 0x6B, MathBinop, "dmul", (kOpFlagFallThru))
JBC_OP(IDiv, 0x6C, MathBinop, "idiv", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(LDiv, 0x6D, MathBinop, "ldiv", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(FDiv, 0x6E, MathBinop, "fdiv", (kOpFlagFallThru))
JBC_OP(DDiv, 0x6F, MathBinop, "ddiv", (kOpFlagFallThru))
JBC_OP(IRem, 0x70, MathBinop, "irem", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(LRem, 0x71, MathBinop, "lrem", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(FRem, 0x72, MathBinop, "frem", (kOpFlagFallThru))
JBC_OP(DRem, 0x73, MathBinop, "drem", (kOpFlagFallThru))
JBC_OP(INeg, 0x74, MathUnop, "ineg", (kOpFlagFallThru))
JBC_OP(LNeg, 0x75, MathUnop, "lneg", (kOpFlagFallThru))
JBC_OP(FNeg, 0x76, MathUnop, "fneg", (kOpFlagFallThru))
JBC_OP(DNeg, 0x77, MathUnop, "dneg", (kOpFlagFallThru))
JBC_OP(IShl, 0x78, MathBinop, "ishl", (kOpFlagFallThru))
JBC_OP(LShl, 0x79, MathBinop, "lshl", (kOpFlagFallThru))
JBC_OP(IShr, 0x7A, MathBinop, "ishr", (kOpFlagFallThru))
JBC_OP(LShr, 0x7B, MathBinop, "lshr", (kOpFlagFallThru))
JBC_OP(IUShr, 0x7C, MathBinop, "iushr", (kOpFlagFallThru))
JBC_OP(LUShr, 0x7D, MathBinop, "lushr", (kOpFlagFallThru))
JBC_OP(IAnd, 0x7E, MathBinop, "iand", (kOpFlagFallThru))
JBC_OP(LAnd, 0x7F, MathBinop, "land", (kOpFlagFallThru))
JBC_OP(IOr, 0x80, MathBinop, "ior", (kOpFlagFallThru))
JBC_OP(LOr, 0x81, MathBinop, "lor", (kOpFlagFallThru))
JBC_OP(IXor, 0x82, MathBinop, "ixor", (kOpFlagFallThru))
JBC_OP(LXor, 0x83, MathBinop, "lxor", (kOpFlagFallThru))
JBC_OP(IInc, 0x84, MathInc, "iinc", (kOpFlagFallThru))
JBC_OP(I2L, 0x85, Convert, "i2l", (kOpFlagFallThru))
JBC_OP(I2F, 0x86, Convert, "i2f", (kOpFlagFallThru))
JBC_OP(I2D, 0x87, Convert, "i2d", (kOpFlagFallThru))
JBC_OP(L2I, 0x88, Convert, "l2i", (kOpFlagFallThru))
JBC_OP(L2F, 0x89, Convert, "l2f", (kOpFlagFallThru))
JBC_OP(L2D, 0x8A, Convert, "l2d", (kOpFlagFallThru))
JBC_OP(F2I, 0x8B, Convert, "f2i", (kOpFlagFallThru))
JBC_OP(F2L, 0x8C, Convert, "f2l", (kOpFlagFallThru))
JBC_OP(F2D, 0x8D, Convert, "f2d", (kOpFlagFallThru))
JBC_OP(D2I, 0x8E, Convert, "d2i", (kOpFlagFallThru))
JBC_OP(D2L, 0x8F, Convert, "d2l", (kOpFlagFallThru))
JBC_OP(D2F, 0x90, Convert, "d2f", (kOpFlagFallThru))
JBC_OP(I2B, 0x91, Convert, "i2b", (kOpFlagFallThru))
JBC_OP(I2C, 0x92, Convert, "i2c", (kOpFlagFallThru))
JBC_OP(I2S, 0x93, Convert, "i2s", (kOpFlagFallThru))
JBC_OP(LCmp, 0x94, Compare, "lcmp", (kOpFlagFallThru))
JBC_OP(FCmpl, 0x95, Compare, "fcmpl", (kOpFlagFallThru))
JBC_OP(FCmpg, 0x96, Compare, "fcmpg", (kOpFlagFallThru))
JBC_OP(DCmpl, 0x97, Compare, "dcmpl", (kOpFlagFallThru))
JBC_OP(DCmpg, 0x98, Compare, "dcmpg", (kOpFlagFallThru))
JBC_OP(Ifeq, 0x99, Branch, "ifeq", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(Ifne, 0x9A, Branch, "ifne", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(Iflt, 0x9B, Branch, "iflt", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(Ifge, 0x9C, Branch, "ifge", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(Ifgt, 0x9D, Branch, "ifgt", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(Ifle, 0x9E, Branch, "ifle", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfICmpeq, 0x9F, Branch, "if_icmpeq", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfICmpne, 0xA0, Branch, "if_icmpne", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfICmplt, 0xA1, Branch, "if_icmplt", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfICmpge, 0xA2, Branch, "if_icmpge", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfICmpgt, 0xA3, Branch, "if_icmpgt", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfICmple, 0xA4, Branch, "if_icmple", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfACmpeq, 0xA5, Branch, "if_acmpeq", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfACmpne, 0xA6, Branch, "if_acmpne", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(Goto, 0xA7, Goto, "goto", (kOpFlagBranch))
JBC_OP(Jsr, 0xA8, Jsr, "jsr", (kOpFlagBranch))
JBC_OP(Ret, 0xA9, Ret, "ret", (kOpFlagBranch))
JBC_OP(TableSwitch, 0xAA, Switch, "tableswitch", (kOpFlagBranch))
JBC_OP(LookupSwitch, 0xAB, Switch, "lookupswitch", (kOpFlagBranch))
JBC_OP(IReturn, 0xAC, Return, "ireturn", (kOpFlagThrowable))
JBC_OP(LReturn, 0xAD, Return, "lreturn", (kOpFlagThrowable))
JBC_OP(FReturn, 0xAE, Return, "freturn", (kOpFlagThrowable))
JBC_OP(DReturn, 0xAF, Return, "dreturn", (kOpFlagThrowable))
JBC_OP(AReturn, 0xB0, Return, "areturn", (kOpFlagThrowable))
JBC_OP(Return, 0xB1, Return, "return", (kOpFlagThrowable))
JBC_OP(GetStatic, 0xB2, StaticFieldOpr, "getstatic", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(PutStatic, 0xB3, StaticFieldOpr, "putstatic", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(GetField, 0xB4, FieldOpr, "getfield", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(PutField, 0xB5, FieldOpr, "putfield", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(InvokeVirtual, 0xB6, Invoke, "invokevirtual", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(InvokeSpecial, 0xB7, Invoke, "invokespecial", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(InvokeStatic, 0xB8, Invoke, "invokestatic", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(InvokeInterface, 0xB9, Invoke, "invokeinterface", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(InvokeDynamic, 0xBA, Invoke, "invokedynamic", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(New, 0xBB, New, "new", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(NewArray, 0xBC, New, "newarray", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(ANewArray, 0xBD, New, "anewarray", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(ArrayLength, 0xBE, ArrayLength, "arraylength", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(AThrow, 0xBF, Throw, "athrow", (kOpFlagThrowable))
JBC_OP(CheckCast, 0xC0, TypeCheck, "checkcast", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(InstanceOf, 0xC1, TypeCheck, "instanceof", (kOpFlagFallThru))
JBC_OP(MonitorEnter, 0xC2, Monitor, "monitorenter", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(MonitorExit, 0xC3, Monitor, "monitorexit", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(Wide, 0xC4, Default, "wide", (kOpFlagFallThru))
JBC_OP(MultiANewArray, 0xC5, MultiANewArray, "multianewarray", (kOpFlagFallThru | kOpFlagThrowable))
JBC_OP(IfNull, 0xC6, Branch, "ifnull", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(IfNonNull, 0xC7, Branch, "ifnonnull", (kOpFlagFallThru | kOpFlagBranch))
JBC_OP(GotoW, 0xC8, Goto, "goto_w", (kOpFlagBranch))
JBC_OP(JsrW, 0xC9, Jsr, "jsr_w", (kOpFlagBranch))
JBC_OP(BreakPoint, 0xCA, Reversed, "breakpoint", (kOpFlagFallThru))
JBC_OP(UnusedCB, 0xCB, Unused, "unused_cb", (kOpFlagFallThru))
JBC_OP(UnusedCC, 0xCC, Unused, "unused_cc", (kOpFlagFallThru))
JBC_OP(UnusedCD, 0xCD, Unused, "unused_cd", (kOpFlagFallThru))
JBC_OP(UnusedCE, 0xCE, Unused, "unused_ce", (kOpFlagFallThru))
JBC_OP(UnusedCF, 0xCF, Unused, "unused_cf", (kOpFlagFallThru))
JBC_OP(UnusedD0, 0xD0, Unused, "unused_d0", (kOpFlagFallThru))
JBC_OP(UnusedD1, 0xD1, Unused, "unused_d1", (kOpFlagFallThru))
JBC_OP(UnusedD2, 0xD2, Unused, "unused_d2", (kOpFlagFallThru))
JBC_OP(UnusedD3, 0xD3, Unused, "unused_d3", (kOpFlagFallThru))
JBC_OP(UnusedD4, 0xD4, Unused, "unused_d4", (kOpFlagFallThru))
JBC_OP(UnusedD5, 0xD5, Unused, "unused_d5", (kOpFlagFallThru))
JBC_OP(UnusedD6, 0xD6, Unused, "unused_d6", (kOpFlagFallThru))
JBC_OP(UnusedD7, 0xD7, Unused, "unused_d7", (kOpFlagFallThru))
JBC_OP(UnusedD8, 0xD8, Unused, "unused_d8", (kOpFlagFallThru))
JBC_OP(UnusedD9, 0xD9, Unused, "unused_d9", (kOpFlagFallThru))
JBC_OP(UnusedDA, 0xDA, Unused, "unused_da", (kOpFlagFallThru))
JBC_OP(UnusedDB, 0xDB, Unused, "unused_db", (kOpFlagFallThru))
JBC_OP(UnusedDC, 0xDC, Unused, "unused_dc", (kOpFlagFallThru))
JBC_OP(UnusedDD, 0xDD, Unused, "unused_dd", (kOpFlagFallThru))
JBC_OP(UnusedDE, 0xDE, Unused, "unused_de", (kOpFlagFallThru))
JBC_OP(UnusedDF, 0xDF, Unused, "unused_df", (kOpFlagFallThru))
JBC_OP(UnusedE0, 0xE0, Unused, "unused_e0", (kOpFlagFallThru))
JBC_OP(UnusedE1, 0xE1, Unused, "unused_e1", (kOpFlagFallThru))
JBC_OP(UnusedE2, 0xE2, Unused, "unused_e2", (kOpFlagFallThru))
JBC_OP(UnusedE3, 0xE3, Unused, "unused_e3", (kOpFlagFallThru))
JBC_OP(UnusedE4, 0xE4, Unused, "unused_e4", (kOpFlagFallThru))
JBC_OP(UnusedE5, 0xE5, Unused, "unused_e5", (kOpFlagFallThru))
JBC_OP(UnusedE6, 0xE6, Unused, "unused_e6", (kOpFlagFallThru))
JBC_OP(UnusedE7, 0xE7, Unused, "unused_e7", (kOpFlagFallThru))
JBC_OP(UnusedE8, 0xE8, Unused, "unused_e8", (kOpFlagFallThru))
JBC_OP(UnusedE9, 0xE9, Unused, "unused_e9", (kOpFlagFallThru))
JBC_OP(UnusedEA, 0xEA, Unused, "unused_ea", (kOpFlagFallThru))
JBC_OP(UnusedEB, 0xEB, Unused, "unused_eb", (kOpFlagFallThru))
JBC_OP(UnusedEC, 0xEC, Unused, "unused_ec", (kOpFlagFallThru))
JBC_OP(UnusedED, 0xED, Unused, "unused_ed", (kOpFlagFallThru))
JBC_OP(UnusedEE, 0xEE, Unused, "unused_ee", (kOpFlagFallThru))
JBC_OP(UnusedEF, 0xEF, Unused, "unused_ef", (kOpFlagFallThru))
JBC_OP(UnusedF0, 0xF0, Unused, "unused_f0", (kOpFlagFallThru))
JBC_OP(UnusedF1, 0xF1, Unused, "unused_f1", (kOpFlagFallThru))
JBC_OP(UnusedF2, 0xF2, Unused, "unused_f2", (kOpFlagFallThru))
JBC_OP(UnusedF3, 0xF3, Unused, "unused_f3", (kOpFlagFallThru))
JBC_OP(UnusedF4, 0xF4, Unused, "unused_f4", (kOpFlagFallThru))
JBC_OP(UnusedF5, 0xF5, Unused, "unused_f5", (kOpFlagFallThru))
JBC_OP(UnusedF6, 0xF6, Unused, "unused_f6", (kOpFlagFallThru))
JBC_OP(UnusedF7, 0xF7, Unused, "unused_f7", (kOpFlagFallThru))
JBC_OP(UnusedF8, 0xF8, Unused, "unused_f8", (kOpFlagFallThru))
JBC_OP(UnusedF9, 0xF9, Unused, "unused_f9", (kOpFlagFallThru))
JBC_OP(UnusedFA, 0xFA, Unused, "unused_fa", (kOpFlagFallThru))
JBC_OP(UnusedFB, 0xFB, Unused, "unused_fb", (kOpFlagFallThru))
JBC_OP(UnusedFC, 0xFC, Unused, "unused_fc", (kOpFlagFallThru))
JBC_OP(UnusedFD, 0xFD, Unused, "unused_fd", (kOpFlagFallThru))
JBC_OP(ImpDep1, 0xFE, Reversed, "impdep1", (kOpFlagFallThru))
JBC_OP(ImpDep2, 0xFF, Reversed, "impdep2", (kOpFlagFallThru))