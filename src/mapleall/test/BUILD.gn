#
# Copyright (c) [2022] Huawei Technologies Co.,Ltd.All rights reserved.
#
# OpenArkCompiler is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#
#     http://license.coscl.org.cn/MulanPSL2
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
# FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v2 for more details.
#
configs = [ "${MAPLEALL_ROOT}:mapleallcompilecfg" ]

cflags_cc -= [
  "-Werror",
]

include_directories = [
  "${MAPLE_ROOT}/tools/gtest_lib/include",
  "${MAPLEALL_ROOT}/maple_util/include",
  "${MAPLEALL_ROOT}/maple_ir/include/",
  "${MAPLEALL_ROOT}/mempool/include/",
  "${THIRD_PARTY_ROOT}/bounds_checking_function/include",
  "${MAPLEALL_ROOT}/maple_me/include/",
  "${MAPLEALL_ROOT}/maple_driver/include/",
  "${MAPLEALL_ROOT}/mpl2mpl/include/",
  "${MAPLEALL_ROOT}/maple_pgo/include/",
  "${MAPLEALL_ROOT}/maple_be/include/",
  "${MAPLEALL_ROOT}/maple_be/include/ad",
  "${MAPLEALL_ROOT}/maple_be/include/ad/target",
  "${MAPLEALL_ROOT}/maple_be/include/cg/",
  "${MAPLEALL_ROOT}/maple_be/include/cg/aarch64/",
  "${MAPLEALL_ROOT}/maple_be/include/be/",
  "${MAPLEALL_ROOT}/maple_phase/include/",
  "${MAPLE_BUILD_OUTPUT}/common/target/",
]
src_mapleallUT = [
  "cl_ut_test.cpp",
  "int_val_test.cpp",
  "stacktrace_test.cpp",
  "maple_string_test.cpp",
  "peep_revTest.cpp",
  "int128_val_test.cpp",
]

executable("mapleallUT") {
  sources = src_mapleallUT
  include_dirs = include_directories
  output_dir = "${root_out_dir}/lib/${HOST_ARCH}"

  deps = [
    "${MAPLEALL_ROOT}/maple_be:libmplbe",
    "${MAPLEALL_ROOT}/maple_me:libmplme",
    "${MAPLEALL_ROOT}/maple_be:libcg",
    "${MAPLEALL_ROOT}/maple_be:libmplad",
    "${MAPLEALL_ROOT}/maple_me:libmplmewpo",
    "${MAPLEALL_ROOT}/maple_ipa:libmplipa",
    "${MAPLEALL_ROOT}/maple_driver:libmaple_driver",
    "${MAPLEALL_ROOT}/maple_phase:libmplphase",
    "${MAPLEALL_ROOT}/maple_util:libmplutil",
    "${MAPLEALL_ROOT}/maple_ir:libmplir",
    "${MAPLEALL_ROOT}/mempool:libmempool",
    "${MAPLEALL_ROOT}/mpl2mpl:libmpl2mpl",
    "${MAPLEALL_ROOT}/maple_util:libcommandline",
    "${THIRD_PARTY_ROOT}/bounds_checking_function:libHWSecureC",
  ]

  libs = [
    "${MAPLE_BUILD_OUTPUT}/lib/64/libmplbe.a",
    "${MAPLE_BUILD_OUTPUT}/lib/64/libmpl2mpl.a",
    "${MAPLE_ROOT}/tools/gtest_lib/lib/libgmock.a",
    "${MAPLE_ROOT}/tools/gtest_lib/lib/libgmock_main.a",
    "${MAPLE_ROOT}/tools/gtest_lib/lib/libgtest.a",
    "${MAPLE_ROOT}/tools/gtest_lib/lib/libgtest_main.a",
    "pthread",
    "dl"
  ]
}

